spring:
  application:
    name: jwt-auth-test

  # H2 인메모리 데이터베이스 (테스트용)
  datasource:
    url: jdbc:h2:mem:testdb;MODE=MYSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password:

  # JPA
  jpa:
    hibernate:
      ddl-auto: create-drop  # 테스트마다 스키마 재생성
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect

  # Redis (테스트용 - embedded 또는 mock)
  data:
    redis:
      host: localhost
      port: 6379

# JWT (테스트용)
jwt:
  secret: dGVzdC1qd3Qtc2VjcmV0LWtleS1mb3ItdGVzdGluZy1taW5pbXVtLTMyLWNoYXJhY3RlcnMtbG9uZy0xMjM0NQ==
  access-token-expiration: 900000
  refresh-token-expiration: 604800000

# OAuth2 (테스트용)
oauth2:
  redirect-uri: http://localhost:3000/oauth/callback

# OAuth2 Client (더미 값)
spring.security.oauth2.client:
  registration:
    google:
      client-id: test-google-client-id
      client-secret: test-google-client-secret
      scope: openid,email,profile
    kakao:
      client-id: test-kakao-client-id
      client-secret: test-kakao-client-secret
      scope: openid,profile_nickname,account_email
    naver:
      client-id: test-naver-client-id
      client-secret: test-naver-client-secret
      scope: openid,profile

# Logging
logging:
  level:
    org.springframework.security: INFO
    com.study.jwtauth: DEBUG
    org.hibernate.SQL: DEBUG
